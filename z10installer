#!/bin/bash

mydir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" || { echo "Couldn't determine the script's running directory, which probably matters, bailing out" >&2; exit 2; }
. "$mydir/utilfunc.sh"  # '.' means 'source'
. "$mydir/argparser.sh"

u=`id -un`
if [ x$u != "xroot" ]; then
    echo "Error: must be run as root user"
    exit 1
fi

# Get Ubuntu Version
version=$(lsb_release -d | awk -F" " '{print $3}' | cut -c 1-5)
if [[ x$version == "x20.04" || x$version == "x18.04" ]]; then
   echo "Ubuntu $version is supported."
else
   echo "Ubuntu $version is not supported!"
   exit 1
fi

MYIP=$(hostname -I | cut -f1 -d" " | tr -d '[:space:]')
DOMAIN="$_arg_domain"
COMPONENT="$_arg_component"
HOSTNAME="${_arg_hostname:="mail"}"."$DOMAIN"
TIMEZONE="${_arg_timezone:-"Asia/Singapore"}"
LETSENCRYPT="${_arg_letsencrypt:-"n"}"
APACHE="${_arg_apache:-"n"}"
MYPASSWORD="${_arg_password:-$(openssl rand -base64 9)}"
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

updateSystemPackages
installDNS
fixFirewall
pingLicenseServer
resetHostName
resetTimeDate
configCert
miscConfig

#Preparing the working directory
if [ ! -d "/tmp/zcs" ]; then
    mkdir /tmp/zcs
else
    rm -rf tmp/zcs/*    #Dangerous Command
fi

#downloadBinaries

echo "Extracting the files ..."
cd /tmp/zcs #&& tar xzf /tmp/zcs-NETWORK-10.0.0_GA_1172.UBUNTU18_64.20220804101254.tgz

echo "Creating the auto-install input files ..."
case $COMPONENT in
  allinone)
    sed -i 's|"$HOSTNAME"|"'${HOSTNAME}'"|g' "$mydir/10-All-in-One"
    sed -i 's|"admin@$DOMAIN"|"admin@'${DOMAIN}'"|g' "$mydir/10-All-in-One"
    sed -i 's|"$DOMAIN"|"'${DOMAIN}'"|g' "$mydir/10-All-in-One"
    sed -i 's|"$MYPASSWORD"|"'${MYPASSWORD}'"|g' "$mydir/10-All-in-One"
    sed -i 's|"$TIMEZONE"|"'${TIMEZONE}'"|g' "$mydir/10-All-in-One"
    memory=$(($(grep MemAvailable /proc/meminfo | awk '{print $2}')/1024/1024))
    sed -i 's|"$MEMORY"|"'${memory}'"|g' "$mydir/10-All-in-One"

    cat "$mydir/10-All-in-One" >/tmp/zcs/zconfig
    if [[ "$APACHE" == "y" ]]; then
        echo 'INSTALL_PACKAGES="zimbra-core zimbra-ldap zimbra-logger zimbra-mta zimbra-snmp zimbra-store zimbra-apache zimbra-spell zimbra-convertd zimbra-memcached zimbra-proxy zimbra-onlyoffice"' >>/tmp/zcs/zconfig
    else 
        echo 'INSTALL_PACKAGES="zimbra-core zimbra-ldap zimbra-logger zimbra-mta zimbra-store zimbra-convertd zimbra-memcached zimbra-proxy zimbra-onlyoffice"' >>/tmp/zcs/zconfig
    fi
    cat <<EOF >/tmp/zcs/zkeys
y
y
y
y
y
n
n
y
$APACHE
$APACHE
y
y
y
y
y
y
EOF
    ;;

  ldap)
    sed -i 's|"$HOSTNAME"|"'${HOSTNAME}'"|g' "$mydir/10-LDAP-Config"
    sed -i 's|"admin@$DOMAIN"|"admin@'${DOMAIN}'"|g' "$mydir/10-LDAP-Config"
    sed -i 's|"$DOMAIN"|"'${DOMAIN}'"|g' "$mydir/10-LDAP-Config"
    sed -i 's|"$MYPASSWORD"|"'${MYPASSWORD}'"|g' "$mydir/10-LDAP-Config"
    sed -i 's|"$TIMEZONE"|"'${TIMEZONE}'"|g' "$mydir/10-LDAP-Config"
    memory=$(($(grep MemAvailable /proc/meminfo | awk '{print $2}')/1024/1024))
    sed -i 's|"$MEMORY"|"'${memory}'"|g' "$mydir/10-LDAP-Config"
    cat "$mydir/10-LDAP-Config" >/tmp/zcs/zconfig
    cat "$mydir/10-LDAP-Answers" >/tmp/zcs/zkeys
    ;;

  mbs)
    sed -i 's|"$HOSTNAME"|"'${HOSTNAME}'"|g' "$mydir/10-MBS-Config"
    sed -i 's|"admin@$DOMAIN"|"admin@'${DOMAIN}'"|g' "$mydir/10-MBS-Config"
    sed -i 's|"$DOMAIN"|"'${DOMAIN}'"|g' "$mydir/10-MBS-Config"
    sed -i 's|"$MYPASSWORD"|"'${MYPASSWORD}'"|g' "$mydir/10-MBS-Config"
    sed -i 's|"$LDAPHOSTNAME"|"'${ldap}'"|g' "$mydir/10-MBS-Config"
    memory=$(($(grep MemAvailable /proc/meminfo | awk '{print $2}')/1024/1024))
    sed -i 's|"$MEMORY"|"'${memory}'"|g' "$mydir/10-MBS-Config"
    #LDAPSERVERID
    cat "$mydir/10-MBS-Config" >/tmp/zcs/zconfig
    cat "$mydir/10-MBS-Answers" >/tmp/zcs/zkeys
    ;;

  mtaproxy)
    cat "$mydir/10-MTAProxy-Config" >/tmp/zcs/zconfig
    cat "$mydir/10-MTAProxy-Answers" >/tmp/zcs/zkeys
    ;;

  *)
    echo -n "unknown value - check the component being installed!"
    echo ""
    exit 1
    ;;
esac

exit 1
getLicense

D=`date +%s`
echo "Installing the Zimbra binaries ..."
echo -e "For more details you can open a new terminal and run ${GREEN}tail -f /tmp/install.log.*${NC}."
cd /tmp/zcs/zcs-NETWORK* && ./install.sh -l /tmp/zcs/ZCSLicense.xml -s < /tmp/zcs/zkeys >> /tmp/zcs/install-$D.log 2>&1
echo -e "${GREEN}... Done.${NC}"

echo "Setting up your Zimbra configuration, this can take up to 20 minutes or slightly more."
echo -e "For more details you can open a new terminal and run tail -f ${GREEN}/tmp/zmsetup.log${NC}."
/opt/zimbra/libexec/zmsetup.pl -c /tmp/zcs/zconfig >> /tmp/zcs/install-$D.log 2>&1
echo "Allow mailbox service to start ..."
for i in {15..0}; do echo -ne "${RED}$i${NC}\033[0K\r"; sleep 1; done; echo
echo "Activating license ..."
su - zimbra -c "zmlicense -a"
echo -e "${GREEN}... Done.${NC}"

postInstallCert
postInstallZimbra

su - zimbra -c '/opt/zimbra/bin/zmcontrol restart'

echo
echo
echo "Zimbra installation details:"
echo
echo "  - Webmail Login:  https://${HOSTNAME}"
echo "  - Admin Console:  https://${HOSTNAME}:9071"
echo "  - Admin Username: admin"
echo "  - Admin Password: ${MYPASSWORD}"
echo ""